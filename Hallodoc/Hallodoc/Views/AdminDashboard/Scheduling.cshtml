@model ProviderShift;
@{
    ViewData["Title"] = "Scheduling";
}
@section Styles {
    <link href="~/css/AdminDashboardStyle.css" rel="stylesheet" type="text/css" />
    <link href="~/css/MyProfileStyle.css" rel="stylesheet" type="text/css" />
    <link href="~/css/scheduling.css" rel="stylesheet" type="text/css" />
}
<div id="body">
    <div class="shadow header-nav-container">
        <partial name="Toast" />
        <partial name="AdminDashboardHeader" model="@Model.adminNavbarViewModel" />
    </div>
    <div style="display: flex;flex-direction: row;">

        @Html.Hidden("currentMonth", TempData["currentMonth"]);
        <div class="container p-3 m-auto mb-4">
            <div id="main-sub-div" style="flex-direction: column;margin-top:30px;width:100%;margin-bottom:30px;">
                <!-- <div style="display: flex;align-items: center;"> -->
                <h4>Scheduling</h4>
                <!-- </div> -->
                <a asp-action="AdminDashboard" asp-controller="AdminDashboard" class="back-navigation-link">
                    <div class="back-navigation">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                             class="bi bi-chevron-left back-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
                        </svg>
                        <span>Back</span>
                    </div>
                </a>

            </div>
            <div>
                <div class="d-flex justify-content-between flex-wrap mt-3 mb-3">
                    <div>
                        <select class="form-select" aria-label="Default select example" id="Region" onchange="filter()">
                            <option value="0" selected>
                                All Regions
                            </option>
                            @foreach (var item in Model.RegionList)
                            {
                                <option value="@item.RegionId" style="color:gray !important;"><span style="color:gray;">@item.Name</span></option>
                            }
                        </select>
                    </div>
                    <div class="flex-grow-1 text-end btns">
                        <a class="btn btn-info actions" asp-action="ProviderOnCall" asp-controller="AdminDashboard">
                            Provider On Call
                        </a>
                        <a class="btn btn-info actions" asp-action="ShiftForReview" asp-controller="AdminDashboard">
                            Shift for Review
                        </a>
                        <a class="btn btn-info actions" id="CreateShift">
                            Add New Shift
                        </a>
                    </div>
                </div>
            </div>

            <div class="scheduling-div">
                @*</div>*@
                @*<div>*@
                @* <div class="d-flex justify-content-between flex-wrap mt-3 mb-3 main-cal-div"> *@
                @*<div>*@
                <div>
                    <h5 id="calendarTitle"></h5>
                </div>
                <div class="d-flex cal-view">

                    <div class="btn btn-info text-body rounded-circle d-flex p-2" style="margin-right:10px;" onclick="calendarPrev()">
                        <span class="material-symbols-outlined">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white" class="bi bi-chevron-left" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0" />
                            </svg>
                        </span>
                    </div>
                    <div style="position:relative;">

                        <div class="d-flex p-2">
                            <span class="material-symbols-outlined">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-calendar3" viewBox="0 0 16 16">
                                    <path d="M14 0H2a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2M1 3.857C1 3.384 1.448 3 2 3h12c.552 0 1 .384 1 .857v10.286c0 .473-.448.857-1 .857H2c-.552 0-1-.384-1-.857z" />
                                    <path d="M6.5 7a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m-9 3a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2m3 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2" />
                                </svg>
                            </span>
                        </div>
                        <input type="date" id="customDatePicker" style="opacity:0;position: absolute;top: 10px;width: 40px;" onchange="temp()" />
                    </div>
                    <div class="btn btn-info text-body rounded-circle d-flex p-2" style="margin-left:10px;" onclick="calendarNext()">
                        <span class="material-symbols-outlined">
                            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="white" class="bi bi-chevron-right" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708" />
                            </svg>
                        </span>
                    </div>
                </div>
                @*</div>*@
                @* </div> *@
                <div class="d-flex flex-wrap mb-3 sub-divs" style="flex-direction:column;">

                    <div class="flex-grow-1 text-end mb-3">
                        <div class="d-flex justify-content-end">
                            <div class="align-items-center d-flex me-3">
                                <span class="border rounded-2 border-danger d-inline-block me-2" style="width:50px; height:30px; background-color:#edacd2 !important"></span>
                                <span>Pending Shift</span>
                            </div>
                            <div class="align-items-center d-flex">
                                <span class="border rounded-2 border-success d-inline-block me-2" style="width:50px; height:30px; background-color:#a5cfa6 !important"></span>
                                <span>Approved Shift</span>
                            </div>
                        </div>
                    </div>
                    <div class="flex-grow-1 text-end">
                        <div class="d-flex justify-content-end">
                            <input type="radio" class="btn-check" name="options-base" id="Day" autocomplete="off" onclick="changeView('resourceTimeline')" checked>
                            <label class="btn btn-outline-info" for="Day">Day</label>
                            <input type="radio" class="btn-check" name="options-base" id="Week" autocomplete="off" onclick="changeView('resourceTimelineWeek')">
                            <label class="btn btn-outline-info mx-2" for="Week">Week</label>
                            <input type="radio" class="btn-check" name="options-base" id="Month" autocomplete="off" onclick="changeView('dayGridMonth')">
                            <label class="btn btn-outline-info" for="Month">Month</label>
                        </div>
                    </div>
                </div>
            </div>

            <div id="calendar"></div>

        </div>
        @* <div id="CreateShift"></div> *@
        <div id="ViewShift"></div>
    </div>
</div>
<div id="myModal" class="modal">

    <div class="modal-content" style="height:680px !important;">
        <div class="modal-header-2">
            <span class="modal-header-2-text">Create Shift</span>
            <span class="close-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-x-lg" viewBox="0 0 16 16">
                    <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                </svg>
            </span>
        </div>
        <div style="padding: 30px; display: flex; flex-direction: column">
            <form asp-action="CreateShift" asp-controller="AdminDashboard" method="post">
                @*<span style="color:gray;font-size:16px;margin-bottom:15px;">Choose communication to send message</span>*@
                @*<br />*@
                @*<input style="display:none;" type="text" id="PhysicianId" asp-for="PhysicianId" />*@
                <div>
                    @*<input type="text" asp-for="RequestId" style="display:none;" id="requestId" />*@
                    <select class="custom-select is-invalid" id="regionDropdown" asp-for="RegionId">
                        <option value="0" style="color:gray !important;"><span style="color:gray;">Narrow Search by Region:</span></option>
                        @foreach (var item in Model.RegionList)
                        {
                            <option value="@item.RegionId" style="color:gray !important;"><span style="color:gray;">@item.Name</span></option>
                        }
                    </select>
                    <div class="invalid-feedback d-none">Please select a region.</div>
                </div>
                <div style="margin-top:15px;">
                    <select class="custom-select-2 is-invalid" id="physicianDropdown" asp-for="PhysicianId">
                        <option value="0" style="color:gray !important;"><span style="color:gray;">Select Physician</span></option>
                    </select>
                    <div class="invalid-feedback d-none">Please select a physician.</div>

                </div>
                <input type="text" value="0000000" style="display:none;" id="RepeatDays" asp-for="RepeatDays" />
                <div class="form-floating login-fields" style="margin-top:15px;width:100%;margin-bottom:15px;">
                    <input type="date" placeholder="Shift Date" class="form-control" asp-for="ShiftDate" />
                    <label for="Email" class="labels">Shift Date</label>
                </div>
                <div class="form-sub-div" style="margin-top: 0px;">
                    <div class="form-floating login-fields login-fields-2">
                        <input type="time" placeholder="Start" class="form-control" asp-for="StartTime" />
                        <label for="Email" class="labels">Start</label>
                    </div>
                    <div class="form-floating login-fields">
                        <input type="time" placeholder="End" class="form-control" asp-for="EndTime" />
                        <label for="Email" class="labels">End</label>
                    </div>
                </div>
                <div class="form-check form-switch" style="margin-bottom:10px;">
                    <label class="form-check-label" for="myToggle">Repeat</label>
                    <input class="form-check-input" type="checkbox" id="myToggle" value="@false" asp-for="IsRepeat" onchange="togglePressed()">
                </div>
                <span style="color:gray;font-size:16px;">Repeat Days</span>
                <div class="form-check-group" style="justify-content: space-around;margin-top:15px;">
                    <label class="form-check-label" style="margin-right:15px;">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(0)" disabled name="day[]" value="monday"> Monday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(1)" disabled name="day[]" value="tuesday"> Tuesday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(2)" disabled name="day[]" value="wednesday"> Wednesday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(3)" disabled name="day[]" value="thursday"> Thursday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(4)" disabled name="day[]" value="friday"> Friday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(5)" disabled name="day[]" value="saturday"> Saturday
                    </label>
                    <label class="form-check-label">
                        <input type="checkbox" class="form-check-input repeats" onchange="RepeatDayPressed(6)" disabled name="day[]" value="sunday"> Sunday
                    </label>
                </div>
                <select class="custom-select repeats" disabled asp-for="RepeatEnd" style="margin-top:15px;">
                    <option value="2" style="color:gray !important;"><span style="color:gray;">2-times</span></option>
                    @for (var i = 3; i < 5; i++)
                    {
                        <option value="@i" style="color:gray !important;"><span style="color:gray;">@i-times</span></option>
                    }
                </select>
                @*<input type="date"  />*@

                <div style="display: flex; margin-top: 15px; justify-content: flex-end">
                    <button type="submit" id="confirmCancelBtn" class="modal-send-btn">
                        Send
                    </button>
                    <a onclick="cancel()" class="modal-cancel-btn">
                        Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="myModal2" style="z-index:10;" class="modal">

    <div class="modal-content" style="height:450px !important;margin:14% auto;">
        <div class="modal-header-2">
            <span class="modal-header-2-text">View Shift</span>
            <span class="close-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class="bi bi-x-lg" viewBox="0 0 16 16">
                    <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8z" />
                </svg>
            </span>
        </div>
        <div style="padding: 30px; display: flex; flex-direction: column">
            <form asp-action="EditShift" asp-controller="AdminDashboard" method="post">
                @*<span style="color:gray;font-size:16px;margin-bottom:15px;">Choose communication to send message</span>*@
                @*<br />*@
                <input style="display:none;" type="text" id="ShiftDetailId" asp-for="ShiftDetailId" />
                <div>
                    @*<input type="text" asp-for="RequestId" style="display:none;" id="requestId" />*@
                    <select class="custom-select is-invalid" id="regionDropdown2" disabled asp-for="RegionId">
                        <option value="0" style="color:gray !important;"><span style="color:gray;">Narrow Search by Region:</span></option>
                        @foreach (var item in Model.RegionList)
                        {
                            <option value="@item.RegionId" style="color:gray !important;"><span style="color:gray;">@item.Name</span></option>
                        }
                    </select>
                    <div class="invalid-feedback d-none">Please select a region.</div>
                </div>
                <div style="margin-top:15px;">
                    <select class="custom-select-2 is-invalid" disabled id="physicianDropdown2" asp-for="PhysicianId">
                        <option value="0" style="color:gray !important;"><span style="color:gray;">Select Physician</span></option>
                        @foreach (var item in Model.Physicians)
                        {
                            <option value="@item.PhysicianId" style="color:gray !important;"><span style="color:gray;">@item.FirstName @item.LastName</span></option>
                        }
                    </select>
                    <div class="invalid-feedback d-none">Please select a physician.</div>

                </div>
                @*<input type="text" value="0000000" style="display:none;" id="RepeatDays" asp-for="RepeatDays" />*@
                <div class="form-floating login-fields" style="margin-top:15px;width:100%;margin-bottom:15px;">
                    <input type="date" placeholder="Shift Date" class="form-control editshift" disabled id="ShiftDate2" asp-for="ShiftDate" />
                    <label for="Date" class="labels">Shift Date</label>
                </div>
                <div class="form-sub-div" style="margin-top: 0px;">
                    <div class="form-floating login-fields login-fields-2">
                        <input type="time" placeholder="Start" class="form-control editshift" disabled id="StartTime2" asp-for="StartTime" />
                        <label for="Email" class="labels">Start</label>
                    </div>
                    <div class="form-floating login-fields">
                        <input type="time" placeholder="End" class="form-control editshift" disabled id="EndTime2" asp-for="EndTime" />
                        <label for="Email" class="labels">End</label>
                    </div>
                </div>

                <div style="display: flex; margin-top: 15px; justify-content: flex-end">
                    <a onclick="ReturnShift()" style="text-decoration:none;margin-right:15px;" class="modal-send-btn">
                        Return
                    </a>
                    <a id="editButton" class="modal-send-btn" style="text-decoration:none;">
                        Edit
                    </a>
                    <button type="submit" style="display:none;" id="SaveButton" class="modal-send-btn">
                        Save
                    </button>
                    <a onclick="DeleteShift()" class="delete-button">
                        Delete
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/fullcalendar-scheduler@6.1.11/index.global.min.js"></script>

<script>
    // Get the input element with id "ShiftDate"
    var shiftDateInput = document.getElementById('ShiftDate');

    // Get the current date
    var today = new Date();

    // Set the minimum date to today
    shiftDateInput.min = today.toISOString().split('T')[0];
    
    // Get the input element with id "ShiftDate2"
    var shiftDateInput2 = document.getElementById('ShiftDate2');

    // Set the minimum date to today
    shiftDateInput2.min = today.toISOString().split('T')[0];


    // Use currentMonth as needed

    //window.parent.postMessage("callFunction", targetWindowOrigin);
    function ReturnShift() {
        var id = document.getElementById("ShiftDetailId").value;
        console.log(id);
        $.ajax({
            url: '/AdminDashboard/ReturnShift',
            type: 'GET',
            data: { id: id },
            dataType: 'json',
            success: function (response) {
                console.log(response);
                modal2.style.display = "none";
                location.reload();
            },
            error: function () {
                alert('An error occurred.');
            }
        });
    }
    function DeleteShift() {
        var id = document.getElementById("ShiftDetailId").value;
        console.log(id);
        $.ajax({
            url: '/AdminDashboard/DeleteShift',
            type: 'GET',
            data: { id: id },
            dataType: 'json',
            success: function (response) {
                console.log(response);
                modal2.style.display = "none";
                location.reload();
            },
            error: function () {
                alert('An error occurred.');
            }
        });
    }
    //$('#regionDropdown2').change(function () {
    //    var selectedRegion = $(this).val();
    //    const regionDropdown2 = document.getElementById("regionDropdown2");
    //    validateDropdown(regionDropdown2, document.querySelector("#regionDropdown2 + div"));
    //    $.ajax({
    //        url: '/AdminDashboard/FetchPhysicians',
    //        type: 'GET',
    //        data: { id: selectedRegion2 },
    //        dataType: 'json',
    //        success: function (response) {
    //            console.log(response);
    //            $('#physicianDropdown2 option:not(:first)').remove();
    //            $.each(response, function (index, physician) {
    //                var option = $('<option></option>')
    //                    .attr('value', physician.physicianId)
    //                    .text(physician.firstName + " " + physician.lastName);
    //                $('#physicianDropdown2').append(option);
    //            });
    //        },
    //        error: function () {
    //            alert('An error occurred.');
    //        }
    //    });
    //});
    document.getElementById('editButton').onclick = function () {
        document.getElementById('editButton').style.display = "none";
        document.getElementById('SaveButton').style.display = "flex";
        var classes = document.getElementsByClassName('editshift');
        for (var i = 0; i < classes.length; i++) {
            classes[i].removeAttribute('disabled');
        }
    }
    var modal2 = document.getElementById("myModal2");

    //var createShift = document.getElementById("CreateShift");

    var span2 = document.getElementsByClassName("close-btn")[1];

    //createShift.onclick = function () {
    //    modal.style.display = "block";
    //};
    span2.onclick = function () {
        modal2.style.display = "none";
    };
    function cancel2() {
        //console.log("hii i");
        modal2.style.display = "none";
    }
    window.onclick = function (event) {
        if (event.target == modal) {
            modal2.style.display = "none";
        }
    };
    function ViewShift(ShiftDetailId) {
        console.log(ShiftDetailId);
        // debugger
        $.ajax({
            type: "GET",
            url: "/AdminDashboard/ViewShift",
            data: { id: ShiftDetailId },
            success: function (data) {
                console.log(data);
                console.log(data.response.shiftDate.toString().split('T'));
                var date = data.response.shiftDate.toString().split('T')[0];
                console.log(date);
                //console.log(document.getElementById("ShiftDate2"));
                document.getElementById("regionDropdown2").value = data.response.regionId;
                document.getElementById("physicianDropdown2").value = data.response.shift.physicianId;
                document.getElementById("ShiftDetailId").value = data.response.shiftDetailId;

                //document.getElementById("ShiftDate").value = data.response.shiftDate;
                $('#ShiftDate2').val(date);
                document.getElementById("StartTime2").value = data.response.startTime;
                document.getElementById("EndTime2").value = data.response.endTime;
                modal2.style.display = "block";
            },
            error: function (data) {
                alert("Cannot Fetch Shift Details");
                toastr.error("Cannot Fetch Shift Details");
            }
        });
    }

    function RepeatDayPressed(day) {
        var repeatDays = document.getElementById("RepeatDays").value.split(''); // convert string to array
        console.log(repeatDays);

        if (repeatDays[day] == 0) {
            console.log('hi');
            repeatDays[day] = 1;
        } else {
            repeatDays[day] = 0;
            console.log('hii');
        }

        document.getElementById("RepeatDays").value = repeatDays.join(''); // convert array back to string
    }

    function togglePressed() {
        var isRepeat = document.getElementById("myToggle").checked;
        console.log(isRepeat);

        var repeatsClasses = document.getElementsByClassName("repeats");
        if (isRepeat) {
            document.getElementById("myToggle").value = true;
            for (var i = 0; i < repeatsClasses.length; i++) {
                repeatsClasses[i].removeAttribute("disabled");
            }
        } else {
            document.getElementById("myToggle").value = false;

            for (var i = 0; i < repeatsClasses.length; i++) {
                repeatsClasses[i].setAttribute("disabled", "disabled");
            }
        }
    }
    function validateDropdown(dropdown, errorDiv) {
        // Check for invalid values and apply validation classes and messages
        if (dropdown.value === "0") {
            dropdown.classList.add("is-invalid");
            errorDiv.classList.remove("d-none");
        } else {
            // Clear error class and message if the selection is valid
            dropdown.classList.remove("is-invalid");
            errorDiv.classList.add("d-none");
        }
    }
    $('#regionDropdown').change(function () {
        var selectedRegion = $(this).val();
        const regionDropdown = document.getElementById("regionDropdown");
        validateDropdown(regionDropdown, document.querySelector("#regionDropdown + div"));
        $.ajax({
            url: '/AdminDashboard/FetchPhysicians',
            type: 'GET',
            data: { id: selectedRegion },
            dataType: 'json',
            success: function (response) {
                console.log(response);
                $('#physicianDropdown option:not(:first)').remove();
                $.each(response, function (index, physician) {
                    var option = $('<option></option>')
                        .attr('value', physician.physicianId)
                        .text(physician.firstName + " " + physician.lastName);
                    $('#physicianDropdown').append(option);
                });
            },
            error: function () {
                alert('An error occurred.');
            }
        });
    });
    var modal = document.getElementById("myModal");

    var createShift = document.getElementById("CreateShift");

    var span = document.getElementsByClassName("close-btn")[0];

    createShift.onclick = function () {
        modal.style.display = "block";
    };
    span.onclick = function () {
        modal.style.display = "none";
    };
    function cancel() {
        console.log("hii i");
        modal.style.display = "none";
    }
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    };
    function temp() {
        var tempDate = document.getElementById("customDatePicker").value;
        changeView("resourceTimeline", tempDate);
    }
    //var calendar;
    //GetCalendar(0);
    //function GetCalendar(RegionId) {
    //    var calendarEl = document.getElementById('calendar');
    //    calendar = new FullCalendar.Calendar(calendarEl, {
    //        height: 'auto',
    //        //schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
    //        themeSystem: 'bootstrap5',
    //        headerToolbar: false,
    //        initialView: 'resourceTimeline',
    //        eventDisplay: 'block',
    //        datesSet: function (info) {
    //            var title = info.view.title;
    //            $("#calendarTitle").html(title);
    //        },
    //        resourceAreaColumns: [{
    //            headerContent: 'Staff',
    //        }],

    //        eventTimeFormat: {
    //            hour: 'numeric',
    //            minute: '2-digit',
    //            meridiem: 'short'
    //        },

    //        eventClick: function (info, jsEvent, view) {
    //            ViewShift(info.event.id);
    //        },
    //        views: {
    //            resourceTimelineWeek: {

    //                slotDuration: { days: 1 },
    //                slotLabelFormat: { weekday: 'short', day: 'numeric', week: 'long' }
    //            }
    //        },
    //        resourceLabelDidMount: function (resourceObj) {
    //            const img = document.createElement('img');
    //            img.src = resourceObj.resource.extendedProps.imageUrl || "/images/doctor-person.png";
    //            img.style.maxHeight = '40px';
    //            resourceObj.el.querySelector('.fc-datagrid-cell-main').appendChild(img);
    //        },
    //        resources: "/AdminDashboard/GetProviderDetailsForSchedule?RegionId=" + RegionId,
    //        events: "/AdminDashboard/GetScheduleData",
    //    });
    //    calendar.render();
    //    calendar.addResource({
    //        id: 'new_resource_id', // Unique ID for the new resource
    //        title: 'New Resource', // Title for the new resource
    //        //extendedProps: {
    //        //    imageUrl: '/images/new_resource_image.png' // Optional: image URL for the new resource
    //        //}
    //    }, {
    //        beforeRender: function (renderInfo) {
    //            // Move the new resource to the top
    //            if (renderInfo.resource.id === 'new_resource_id') {
    //                renderInfo.resource.moveBefore(renderInfo.resources.get('resource_id_of_first_resource'));
    //            }
    //        }
    //    });
    //}
    //let calendarNext = () => calendar.next();
    //let calendarPrev = () => calendar.prev();
    //let calendarToday = () => calendar.today();

    //var x = document.getElementById("month-val").value;
    //console.log(x);
    //if (x != null || x != undefined) {
    //    calendar.changeView('dayGridMonth');
    //}
    //let changeView = (type) => calendar.changeView(type);
    var calendar;
    GetCalendar();
    function GetCalendar() {
        console.log("yoyo");
        //var RegionId = document.getElementById("Region").value;
        var calendarEl = document.getElementById('calendar');
        calendar = new FullCalendar.Calendar(calendarEl, {
            height: 'auto',
            schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
            themeSystem: 'bootstrap5',
            headerToolbar: false,
            initialView: 'resourceTimeline',
            eventDisplay: 'block',
            datesSet: function (info) {
                var title = info.view.title;
                document.getElementById("calendarTitle").innerHTML = title;
                loadResources();
                loadShifts();
            },
            eventClick: function (info, jsEvent, view) {
                ViewShift(info.event.id);
            },
            views: {
                resourceTimelineWeek: {
                    slotDuration: { days: 1 },
                    slotLabelFormat: { weekday: 'short', day: 'numeric', week: 'long' }
                },
                day: {
                    slotDuration: { hours: 1 },
                    slotLabelFormat: { hour: 'numeric', minute: '2-digit', meridiem: 'short' }
                }
            },
            resourceAreaColumns: [{
                headerContent: 'Staff',
            }],
            resourceLabelDidMount: function (resourceObj) {
                const img = document.createElement('img');
                img.src = resourceObj.resource.extendedProps.imageUrl || "/images/doc-ico.png";
                img.style.maxHeight = '40px';
                resourceObj.el.querySelector('.fc-datagrid-cell-main').appendChild(img);
            },
            //resources: "/AdminDashboard/GetProviderDetailsForSchedule?RegionId=" + RegionId,
            //events: "/AdminDashboard/GetScheduleData",
            eventClick: function (info, jsEvent, view) {
                ViewShift(info.event.id);
            },
        });
        calendar.render();
    }
    function filter() {
        loadShifts();
        loadResources(); 
    }
    let calendarNext = () => calendar.next();
    let calendarPrev = () => calendar.prev();
    let calendarToday = () => calendar.today();
    //let changeView = (type) => calendar.changeView(type);
    let changeView = (type, date = null) => {
        calendar.changeView(type, date);
    };
    var currentMonth = document.getElementById("currentMonth").value;
    //console.log(currentMonth);
    if (currentMonth != "") {
        changeView('dayGridMonth');
        var checkedButtons = document.getElementsByClassName("btn-check");
        for (var i = 0; i < checkedButtons.length; i++) {
            checkedButtons[i].checked = false;
        }
        document.getElementsByClassName("btn-check")[2].checked = true;
    }
    function loadResources() {
        $.ajax({
            url: '/AdminDashboard/GetProviderDetailsForSchedule',
            data: { RegionId: $("#Region").val() },
            type: 'GET',
            success: function (data) {
                var resources = calendar.getResources();
                resources.forEach(function (resource) {
                    resource.remove();
                });
                data.forEach(function (event) {
                    calendar.addResource(event);
                });
            },
            error: function (xhr, status, error) {
                toastr.error('Error fetching schedule data:', error);
            }
        });
    }
    function loadShifts() {
        $.ajax({
            url: '/AdminDashboard/GetScheduleData',
            data: { RegionId: $("#Region").val() },
            type: 'GET',
            success: function (data) {
                calendar.removeAllEvents();
                data.forEach(function (event) {
                    calendar.addEvent(event);
                });
            },
            error: function (xhr, status, error) {
                toastr.error('Error fetching schedule data:', error);
            }
        });
    }
    //sidebar hamburger
    let sidebarOpen = false;
    function hamburger() {
        if (!sidebarOpen) {
            document.getElementById('sidebar').style.display = "flex";
            document.getElementById('main-div').style.opacity = "0.5";
            document.getElementById('main-div').style.backgroundColor = "rgba(0, 0, 0, 0.1)";
            sidebarOpen = true;
        } else {
            console.log('hii');
            document.getElementById('sidebar').style.display = "none";
            document.getElementById('main-div').style.opacity = "1";
            document.getElementById('main-div').style.backgroundColor = "#f5f5f5";
            sidebarOpen = false;
        }
    }
    //<script>
    //$(document).ready(function () {
    //    calendar.getEventSources()[0].events.forEach(function (event) {
    //        // Assuming your event rendering uses a specific class
    //        let eventElement = $('.fc-event', event.el);
    //        let titleElement = $('<div class="event-title">' + event.title + '</div>');
    //        let timeRangeElement = $('<div class="event-time-range">' + event.start + '</div>');
    //        eventElement.append(titleElement);
    //        eventElement.append(timeRangeElement);
    //    });
    //});

    window.onload = function checkingTheme() {
        try {
            let themeCheck = localStorage.getItem('theme');
            if (themeCheck == null || themeCheck == 'light') {
                document.getElementById('main-div').style.backgroundColor = "#f5f5f5";
                document.getElementById('main-sub-div').style.backgroundColor = "#f5f5f5";
                document.getElementById('body').style.backgroundColor = "#f5f5f5";
                document.getElementsByClassName('change-theme')[1].classList.add('hide-icon');
                document.getElementsByClassName('change-theme')[0].classList.remove('hide-icon');
            } else {
                document.getElementById('main-div').style.backgroundColor = "black";
                document.getElementById('main-sub-div').style.backgroundColor = "black";
                document.getElementById('body').style.backgroundColor = "black";
                document.getElementsByClassName('change-theme')[0].classList.add('hide-icon');
                document.getElementsByClassName('change-theme')[1].classList.remove('hide-icon');
            }
        } catch (error) {
            console.log('no themes decided yet');
        }
    }
    function changeTheme() {
        let theme = localStorage.getItem('theme');
        if (theme == null || theme == 'light') {
            localStorage.setItem('theme', 'dark');
            document.getElementById('main-div').style.backgroundColor = "black";
            document.getElementById('main-sub-div').style.backgroundColor = "black";
            document.getElementById('body').style.backgroundColor = "black";
            document.getElementsByClassName('change-theme')[0].classList.add('hide-icon');
            document.getElementsByClassName('change-theme')[1].classList.remove('hide-icon');
        } else if (theme == 'dark') {
            localStorage.setItem('theme', 'light');
            document.getElementById('main-div').style.backgroundColor = "#f5f5f5";
            document.getElementById('main-sub-div').style.backgroundColor = "#f5f5f5";
            document.getElementById('body').style.backgroundColor = "#f5f5f5";
            document.getElementsByClassName('change-theme')[1].classList.add('hide-icon');
            document.getElementsByClassName('change-theme')[0].classList.remove('hide-icon');
        }
    }


</script>