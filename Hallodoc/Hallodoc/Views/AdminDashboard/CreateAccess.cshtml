@using HalloDoc.DataLayer.ViewModels;
@model CreateAccessViewModel;
@using static HalloDoc.EnumStatus;
@{
    ViewData["Title"] = "Create Access";
}
@section Styles {
    <link href="~/css/accountAccess.css" rel="stylesheet" type="text/css" />
    <link href="~/css/AdminDashboardStyle.css" rel="stylesheet" type="text/css" />
}
@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}

<div id="body">
    <div class="shadow header-nav-container">
        <partial name="Toast" />
        <partial name="AdminDashboardHeader" model="@Model.adminNavbarViewModel" />
    </div>
    <div id="main-div" class="tabcontent main-profile-div">
        <div class="main-sub-div">
            <div class="d-flex justify-content-between align-items-center py-3 topheader">
                <h3>Create Role</h3>
                <div class="cancelButton mb-3 mt-3" style="width:65px;">
                    <a class="textdeconone" asp-controller="AdminDashboard" asp-action="AdminDashboard">
                        <span class="cancelButtonText" style="color:#0dcaf0;">&lt Back</span>
                    </a>
                </div>
            </div>
            <div class="p-3 bg-white">
                <header class="h4">Details</header>
                <form asp-action="CreateAccess" asp-controller="AdminDashboard" method="post">
                    <input asp-for="RoleId" type="text" class="hide" id="SelectedMenuItems" />
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                @* <input type="hidden" asp-for="RequestId" id="requestId" /> *@
                                <input type="name" class="form-control" id="floatingInputF" placeholder="Role Name" asp-for="RoleName">
                                <label for="floatingInputF">Role Name</label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-floating mb-3">
                                @* <label for="Password" class="labels">Account Type</label> *@
                                <select class="custom-select-7 text-secondary dropdownBorder" id="physicianDropdown" asp-for="AccountType" 
                                    style="width: 100%;height: 58px;padding:8px;border: 1px solid #d3d6d6;border-radius:5px;" onchange="test(this)" asp-for="AccountType">
                                    <option value="0" disabled selected hidden><span>Account Type</span></option>
                                    <option value="admin-div" style="color:gray !important;"><span style="color:gray;">Admin</span></option>
                                    <option value="provider-div" style="color:gray !important;"><span style="color:gray;">Provider</span></option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="menu-items" id="admin-div">
                        @foreach (var item in Model.Query)
                        {
                            @if (@item.AccountType == 1)
                            {
                                <div class="menu-item">
                                    <input type="checkbox" data-menu-id="@item.MenuId" class="checkbox" value="@item.MenuId" />
                                    <span class="ms-2">@item.Name</span>
                                </div>
                            }
                        }
                    </div>
                    <div class="menu-items hide" id="provider-div">
                        @foreach (var item in Model.Query)
                        {
                            @if (@item.AccountType == 2)
                            {
                                <div class="menu-item">
                                    <input type="checkbox" data-menu-id="@item.MenuId" class="checkbox" value="@item.MenuId" />
                                    <span class="ms-2">@item.Name</span>
                                </div>
                            }
                        }
                    </div>
                    <div class="form-floating mb-3 d-flex justify-content-end align-items-center mt-3">
                        <button type="submit" class="saveButton me-3" style="width:65px;"><span class="saveButtonText">Save</span> </button>
                        <a class="cancelButton textdeconone" onclick="cancel4()" style="width:65px;"><span class="cancelButtonText">Cancel</span></a>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        $(document).ready(function () {
            //var ticked = document.getElementsByClassName('checkbox');
            //for (var i = 0; i < ticked.length; i++) {
            //    if (ticked[i].checked) {
            //        selectedMenuItems += (selectedMenuItems ? ',' : '') + ticked[i].value;
            //    }
            //}
            var selectedMenuItems = $('#SelectedMenuItems').val();
            $('.checkbox').change(function () {
                var menuId = $(this).data('menuId');
                var isChecked = $(this).is(':checked');

                // Update selectedRegion string based on checkbox state
                if (isChecked) {
                    selectedMenuItems += (selectedMenuItems ? ',' : '') + menuId;
                } else {
                    selectedMenuItems = selectedMenuItems.replace(new RegExp(',' + menuId + '|^' + menuId + ','), '');
                }
                console.log(selectedMenuItems);
                $('#SelectedMenuItems').val(selectedMenuItems);
            });
        });
        document.getElementById('physicianDropdown').addEventListener('change', function () {
            var id = document.getElementById('physicianDropdown').value;
            var menuClasses = document.getElementsByClassName('menu-items');
            for (var i = 0; i < menuClasses.length; i++) {
                if (menuClasses[i].id == id) {
                    menuClasses[i].classList.remove('hide');
                } else {
                    menuClasses[i].classList.add('hide');
                }
            }
            //document.getElementById(id).classList.remove()
        });

        //my
        // $(document).ready(function () {
        //     // Function to fetch menu items based on account type
        //     function fetchMenuItems(accountType) {
        //         $.ajax({
        //             url: '/AdminDashboard/FetchMenuItems',
        //             type: 'GET',
        //             data: { accountType: accountType },
        //             dataType: 'json',
        //             success: function (response) {
        //                 var menuItemsContainer = $('#' + accountType + '-div');
        //                 menuItemsContainer.empty(); // Clear existing checkboxes
        //                 $.each(response, function (index, menuItem) {
        //                     var checkbox = $('<input>')
        //                         .attr('type', 'checkbox')
        //                         .attr('data-menu-id', menuItem.MenuId)
        //                         .addClass('checkbox')
        //                         .val(menuItem.MenuId);
        //                     var span = $('<span>').addClass('ms-2').text(menuItem.Name);
        //                     var menuItemDiv = $('<div>').addClass('menu-item').append(checkbox, span);
        //                     menuItemsContainer.append(menuItemDiv);
        //                 });
        //             },
        //             error: function () {
        //                 console.log('An error occurred while fetching menu items.');
        //             }
        //         });
        //     }

            // Function to show all checkboxes when no account type is selected
        //     function showAllCheckboxes() {
        //         $('.menu-items').each(function () {
        //             $(this).removeClass('hide');
        //         });
        //     }

        //     // Event listener for account type dropdown change
        //     $('#physicianDropdown').change(function () {
        //         var accountType = $(this).val(); // Get selected account type
        //         if (accountType === '1') {
        //             showAllCheckboxes();
        //         } else {
        //             $('.menu-items').addClass('hide'); // Hide all menu item containers
        //             $('#' + accountType + '-div').removeClass('hide'); // Show menu items for selected account type
        //             fetchMenuItems(accountType); // Fetch menu items based on selected account type
        //         }
        //     });

        //     // Event listener for checkbox change
        //     $('.checkbox').change(function () {
        //         var selectedMenuItems = [];
        //         $('.checkbox:checked').each(function () {
        //             selectedMenuItems.push($(this).val());
        //         });
        //         $('#SelectedMenuItems').val(selectedMenuItems.join(',')); // Set hidden input value
        //     });

        //     // Show all checkboxes initially
        //     showAllCheckboxes();
        // });






        // <script>
        //     $(document).ready(function () {
        //         // Function to fetch menu items based on account type
        //         function fetchMenuItems(accountType) {
        //             $.ajax({
        //                 url: '/AdminDashboard/FetchMenuItems', // Change the URL to match your controller action
        //                 type: 'GET',
        //                 data: { accountType: accountType },
        //                 dataType: 'json',
        //                 success: function (response) {
        //                     var menuItemsContainer = $('#' + accountType + '-div');
        //                     menuItemsContainer.empty(); // Clear existing checkboxes
        //                     $.each(response, function (index, menuItem) {
        //                         var checkbox = $('<input>')
        //                             .attr('type', 'checkbox')
        //                             .attr('data-menu-id', menuItem.MenuId)
        //                             .addClass('checkbox')
        //                             .val(menuItem.MenuId);
        //                         var label = $('<label>').text(menuItem.Name);
        //                         var menuItemDiv = $('<div>').addClass('menu-item').append(checkbox, label);
        //                         menuItemsContainer.append(menuItemDiv);
        //                     });
        //                 },
        //                 error: function () {
        //                     console.log('An error occurred while fetching menu items.');
        //                 }
        //             });
        //             console.log('in first')
        //         }
        //         console.log('before')
        //         // Event listener for account type dropdown change
        //         $('#physicianDropdown').change(function () {
        //             console.log('in here')
        //             var accountType = $(this).val(); // Get selected account type
        //             if (accountType !== '0') {
        //                 $('.menu-items').addClass('hide'); // Hide all menu item containers
        //                 $('#' + accountType + '-div').removeClass('hide'); // Show menu items for selected account type
        //                 fetchMenuItems(accountType); // Fetch menu items based on selected account type
        //             } else {
        //                 $('.menu-items').removeClass('hide'); // Show all menu item containers if "All" selected
        //             }
        //         });

        //         // Event listener for checkbox change
        //         $('.checkbox').change(function () {
        //             var selectedMenuItems = [];
        //             $('.checkbox:checked').each(function () {
        //                 selectedMenuItems.push($(this).val());
        //             });
        //             $('#SelectedMenuItems').val(selectedMenuItems.join(',')); // Set hidden input value
        //         });
        //     });
    </script>


    </script>
</div>